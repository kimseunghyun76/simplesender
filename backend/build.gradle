buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework:springloaded:1.2.6.RELEASE")
    }
}

buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

group = 'com.ksh.mockup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}
configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("org.hibernate:hibernate-validator")
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    //compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
// Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
// https://mvnrepository.com/artifact/com.mashape.unirest/unirest-java
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    // https://mvnrepository.com/artifact/org.elasticsearch.client/rest
    compile group: 'org.elasticsearch.client', name: 'rest', version: '5.5.3'
}
